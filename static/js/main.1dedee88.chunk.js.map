{"version":3,"sources":["constants/store.ts","pages/Home.tsx","static/images/google-logo.svg","pages/Login.tsx","constants/routes.tsx","components/PrivateRoute/PrivateRoute.tsx","pages/NoMatch.tsx","styles/theme.ts","layout/Root.tsx","api/config.ts","reportWebVitals.ts","index.tsx"],"names":["useGlobalState","createGlobalState","user","undefined","Home","className","Button","variant","onClick","a","signOut","getAuth","email","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","fill","d","SvgGoogleLogo","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","id","ForwardRef","ErrorLabel","message","Section","styled","theme","borderRadius","border","palette","neutral","main","padding","TextField","MuiTextField","Login","useForm","defaultValues","login","password","passwordVisible","reValidateMode","handleSubmit","control","trigger","watch","errors","formState","useState","loading","setLoading","step","setStep","navigate","useNavigate","onSubmit","signInWithEmailAndPassword","alert","useEffect","isNil","routes","HOME","path","Container","maxWidth","LinearProgress","Typography","sx","color","borderColor","backgroundColor","startIcon","endIcon","Grid","container","spacing","item","xs","clsx","name","rules","required","render","field","error","label","helperText","Link","href","component","underline","console","info","type","FormControlLabel","Checkbox","prefix","isPrivate","LOGIN","PrivateRoute","children","location","useLocation","CircularProgress","to","state","from","NoMatch","createTheme","light","dark","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Root","authentication","setUser","onAuthStateChanged","authUser","ThemeProvider","CssBaseline","map","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6OAOeA,EAAmBC,YAAyB,CACvDC,UAAMC,IADKH,e,eCHA,SAASI,IAAQ,IAAD,EACZJ,EAAe,QAAvBE,EADoB,oBAG3B,OACI,sBAAKG,UAAU,MAAf,UACI,cAACC,EAAA,EAAD,CACIC,QAAQ,OACRC,QAAO,sBAAE,sBAAAC,EAAA,sDACLC,YAAQC,eADH,2CAFb,qBADJ,OASKT,QATL,IASKA,OATL,EASKA,EAAMU,S,+ICjBnB,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAIoB,EAAqB,gBAAoB,OAAQ,CACnDC,KAAM,UACNC,EAAG,+SAGD,EAAqB,gBAAoB,OAAQ,CACnDD,KAAM,UACNC,EAAG,kOAGD,EAAqB,gBAAoB,OAAQ,CACnDD,KAAM,UACNC,EAAG,0XAGD,EAAqB,gBAAoB,OAAQ,CACnDD,KAAM,UACNC,EAAG,kOAGD,EAAqB,gBAAoB,OAAQ,CACnDD,KAAM,UACNC,EAAG,2BAGD,EAAqB,gBAAoB,OAAQ,CACnDD,KAAM,UACNC,EAAG,uRAGL,SAASC,EAAcC,EAAMC,GAC3B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQjB,EAAyBa,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO3B,EAAS,CACtDgC,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,IAAKR,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DQ,GAAIP,GACHD,GAAS,KAAMN,EAAO,EAAO,EAAO,EAAO,EAAO,GAGvD,I,EAAIe,EAA0B,aAAiBZ,G,GAChC,I,2CCzBf,SAASa,EAAT,GAAuD,IAAjCC,EAAgC,EAAhCA,QAClB,OACI,qCACI,cAAC,IAAD,CAAWhD,UAAU,iBACrB,+BAAOgD,OAKnB,IAAMC,EAAUC,YAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CAC1CC,aAAc,MACdC,OAAO,aAAD,OAAeF,EAAMG,QAAQC,QAAQC,MAC3CC,QAAS,iBACThB,MAAO,YAGLiB,EAAYR,YAAOS,IAAPT,CAAH,uGAMA,SAASU,IAAS,IAAD,EAOxBC,YAAoB,CACpBC,cAAe,CAAEC,MAAO,GAAIC,SAAU,GAAIC,iBAAiB,GAC3DC,eAAgB,aAPhBC,EAFwB,EAExBA,aACAC,EAHwB,EAGxBA,QACAC,EAJwB,EAIxBA,QACAC,EALwB,EAKxBA,MACaC,EANW,EAMxBC,UAAaD,OANW,EAWb5E,EAAe,QAAvBE,EAXqB,sBAYE4E,oBAAS,GAZX,mBAYrBC,EAZqB,KAYZC,EAZY,OAaJF,mBAAgB,GAbZ,mBAarBG,EAbqB,KAafC,EAbe,KActBC,EAAWC,cAEXC,EAAmC,uCAAG,+BAAA5E,EAAA,6DAAS2D,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SACxDW,GAAW,GAD6B,kBAG9BM,YAA2B3E,cAAWyD,EAAOC,GAHf,uDAKpCkB,MAAM,MAAc,IALgB,QAOxCP,GAAW,GAP6B,yDAAH,sDAgBzC,OANAQ,qBAAU,WACDC,gBAAMvF,IACPiF,EAASO,GAAOC,KAAKC,QAE1B,CAAC1F,IAGA,cAAC2F,EAAA,EAAD,CAAWC,SAAS,KAAKzF,UAAU,4CAAnC,SACI,sBAAMgF,SAAUb,EAAaa,GAA7B,SACI,gCACKN,GAAW,cAACgB,EAAA,EAAD,IACZ,eAACzC,EAAD,WACI,gCACI,cAAC,EAAD,CAAMjD,UAAU,WAChB,cAAC2F,EAAA,EAAD,CACIzF,QAAQ,KACRF,UAAU,wCAFd,SAIc,IAAT4E,EAAa,SAAW,qBAE7B,sBAAM5E,UAAU,uCAAhB,SACc,IAAT4E,EACG,cAAC3E,EAAA,EAAD,CACIE,QAAS,kBAAM0E,EAAQ,IACvBe,GAAI,CACAxC,aAAc,OACdyC,MAAO,eACPC,YAAa,eACb,UAAW,CACPA,YAAa,eACbC,gBAAiB,kBAGzB7F,QAAQ,WACR8F,UAAW,cAAC,IAAD,IACXC,QAAS,cAAC,IAAD,IAbb,SAeK3B,EAAM,WAGX,wBAIZ,qBAAKtE,UAAU,QAAf,SACI,eAACkG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAItG,UAAWuG,YAAc,IAAT3B,GAAc,UAAjD,UACI,cAAC,IAAD,CACI4B,KAAK,QACLpC,QAASA,EACTqC,MAAO,CACHC,SAAU,kCAEdC,OAAQ,kBAAGC,EAAH,EAAGA,MAAH,OACJ,cAAC,EAAD,yBACI5G,UAAU,UACN4G,GAFR,IAGIC,QAAStC,EAAOR,MAChB+C,MAAM,2BACN5G,QAAQ,WACR6G,YACI,UAAAxC,EAAOR,aAAP,eAAcf,UACV,cAACD,EAAD,CACIC,QAASuB,EAAOR,MAAMf,gBAO9C,cAACgE,EAAA,EAAD,CACIC,KAAK,WACLC,UAAU,SACVhH,QAAQ,QACRiH,UAAU,OACVnH,UAAU,cACVG,QAAS,WACLiH,QAAQC,KAAK,kBAPrB,2CAaM,IAATzC,GACG,cAACsB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CACIE,KAAK,WACLpC,QAASA,EACTqC,MAAO,CACHC,SAAU,cAEdC,OAAQ,kBAAGC,EAAH,EAAGA,MAAH,OACJ,cAAC,EAAD,yBACIU,KACIhD,EAAM,mBACA,OACA,WAEVtE,UAAU,UACN4G,GAPR,IAQIC,QAAStC,EAAOP,SAChB8C,MAAM,mBACN5G,QAAQ,WACR6G,YACI,UAAAxC,EAAOP,gBAAP,eAAiBhB,UACb,cAACD,EAAD,CACIC,QAASuB,EAAOP,SAAShB,kBAU/C,IAAT4B,GACG,cAACsB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAItG,UAAU,YAA7B,SACI,cAAC,IAAD,CACIwG,KAAK,kBACLpC,QAASA,EACTuC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACJ,cAACW,EAAA,EAAD,CACInD,QAAS,cAACoD,EAAA,EAAD,eAAcZ,IACvBE,MAAM,+BAMhB,IAATlC,GACG,cAACsB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAItG,UAAU,OAA7B,SACI,uBAAMA,UAAU,UAAhB,yGAGI,cAACgH,EAAA,EAAD,CACIC,KAAK,WACLE,UAAU,OACVnH,UAAU,cAHd,+CAUZ,eAACkG,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,GAAI,GAAItG,UAAU,wBAAvC,UACI,cAACC,EAAA,EAAD,CAAQqH,KAAK,SAASpH,QAAQ,OAAOF,UAAU,cAA/C,SACc,IAAT4E,EAAa,kBAAiB,kCAEnC,cAAC3E,EAAA,EAAD,CACIE,QAAO,sBAAE,sBAAAC,EAAA,yDACQ,IAATwE,EADC,gCAEiBP,EAAQ,SAFzB,eAKGQ,EAAQ,GALX,OASQ,IAATD,GACAT,EAAaa,EAAbb,GAVC,2CAaTjE,QAAQ,YACRF,UAAU,cAfd,qCCjOpC,IAAMyH,GAAS,eAEFpC,GAAS,CAClBC,KAAM,CACFC,KAAK,GAAD,OAAKkC,GAAL,KACJP,UAAW,cAACnH,EAAD,IACXyG,KAAM,OACNkB,WAAW,GAEfC,MAAO,CACHpC,KAAK,GAAD,OAAKkC,GAAL,UACJP,UAAW,cAACtD,EAAD,IACX4C,KAAM,QACNkB,WAAW,ICIJE,OAff,YAAgE,IAAxCC,EAAuC,EAAvCA,SACdC,EAAWC,cAD0C,EAE5CpI,EAAe,QAAvBE,EAFoD,oBAI3D,YAAaC,IAATD,EACO,cAACmI,EAAA,EAAD,IAGE,OAATnI,EACO,cAAC,IAAD,CAAUoI,GAAI5C,GAAOsC,MAAMpC,KAAM2C,MAAO,CAAEC,KAAML,KAGpDD,G,UCbI,SAASO,KACpB,IAAMtD,EAAWC,cAEjB,OACI,qBAAK/E,UAAU,MAAf,SACI,cAACC,EAAA,EAAD,CAAQE,QAAS,kBAAM2E,EAASO,GAAOC,KAAKC,OAA5C,uB,0CCEG8C,gBAAY,CACvB/E,QAAS,CACLC,QAAS,CACL+E,MAAO,UACP9E,KAAM,UACN+E,KAAM,c,UCDlBC,aCf8B,CAC1BC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,8CD6CIC,OAlCf,WACI,IAAMC,EAAiB1I,cADX,EAEQX,EAAe,QAA1BsJ,EAFG,oBAUZ,OANA9D,qBAAU,WACN+D,YAAmBF,GAAgB,SAACG,GAChCF,EAAQE,QAEb,CAACD,IAAoBF,IAGpB,eAACI,GAAA,EAAD,CAAejG,MAAOA,GAAtB,UACI,cAACkG,GAAA,EAAD,IACA,cAAC,KAAD,UACI,eAAC,IAAD,WACKC,cAAIjE,IAAQ,gBAAGE,EAAH,EAAGA,KAAM2B,EAAT,EAASA,UAAT,SAAoBQ,UAEzB,cAAC,IAAD,CAEInC,KAAMA,EACNgE,QAAS,cAAC,GAAD,UAAerC,KAFnB3B,GAKT,cAAC,IAAD,CAAkBA,KAAMA,EAAMgE,QAASrC,GAA3B3B,MAIpB,cAAC,IAAD,CAAOA,KAAK,IAAIgE,QAAS,cAACnB,GAAD,eE9B9BoB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAAStD,OACL,cAAC,IAAMuD,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SAM5BZ,O","file":"static/js/main.1dedee88.chunk.js","sourcesContent":["import { User } from 'firebase/auth';\r\nimport { createGlobalState } from 'react-hooks-global-state';\r\n\r\ntype Store = {\r\n    user: User | null | undefined;\r\n};\r\n\r\nexport const { useGlobalState } = createGlobalState<Store>({\r\n    user: undefined,\r\n});\r\n","import { Button } from '@mui/material';\r\nimport { useGlobalState } from 'constants/store';\r\nimport { getAuth, signOut } from 'firebase/auth';\r\n\r\nexport default function Home() {\r\n    const [user] = useGlobalState('user');\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Button\r\n                variant=\"text\"\r\n                onClick={async () => {\r\n                    signOut(getAuth());\r\n                }}\r\n            >\r\n                signout\r\n            </Button>\r\n            {user?.email}\r\n        </div>\r\n    );\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#4285F4\",\n  d: \"M9.24 8.19v2.46h5.88c-.18 1.38-.64 2.39-1.34 3.1-.86.86-2.2 1.8-4.54 1.8-3.62 0-6.45-2.92-6.45-6.54s2.83-6.54 6.45-6.54c1.95 0 3.38.77 4.43 1.76L15.4 2.5C13.94 1.08 11.98 0 9.24 0 4.28 0 .11 4.04.11 9s4.17 9 9.13 9c2.68 0 4.7-.88 6.28-2.52 1.62-1.62 2.13-3.91 2.13-5.75 0-.57-.04-1.1-.13-1.54H9.24z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#EA4335\",\n  d: \"M25 6.19c-3.21 0-5.83 2.44-5.83 5.81 0 3.34 2.62 5.81 5.83 5.81s5.83-2.46 5.83-5.81c0-3.37-2.62-5.81-5.83-5.81zm0 9.33c-1.76 0-3.28-1.45-3.28-3.52 0-2.09 1.52-3.52 3.28-3.52s3.28 1.43 3.28 3.52c0 2.07-1.52 3.52-3.28 3.52z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#4285F4\",\n  d: \"M53.58 7.49h-.09c-.57-.68-1.67-1.3-3.06-1.3C47.53 6.19 45 8.72 45 12c0 3.26 2.53 5.81 5.43 5.81 1.39 0 2.49-.62 3.06-1.32h.09v.81c0 2.22-1.19 3.41-3.1 3.41-1.56 0-2.53-1.12-2.93-2.07l-2.22.92c.64 1.54 2.33 3.43 5.15 3.43 2.99 0 5.52-1.76 5.52-6.05V6.49h-2.42v1zm-2.93 8.03c-1.76 0-3.1-1.5-3.1-3.52 0-2.05 1.34-3.52 3.1-3.52 1.74 0 3.1 1.5 3.1 3.54.01 2.03-1.36 3.5-3.1 3.5z\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#FBBC05\",\n  d: \"M38 6.19c-3.21 0-5.83 2.44-5.83 5.81 0 3.34 2.62 5.81 5.83 5.81s5.83-2.46 5.83-5.81c0-3.37-2.62-5.81-5.83-5.81zm0 9.33c-1.76 0-3.28-1.45-3.28-3.52 0-2.09 1.52-3.52 3.28-3.52s3.28 1.43 3.28 3.52c0 2.07-1.52 3.52-3.28 3.52z\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#34A853\",\n  d: \"M58 .24h2.51v17.57H58z\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#EA4335\",\n  d: \"M68.26 15.52c-1.3 0-2.22-.59-2.82-1.76l7.77-3.21-.26-.66c-.48-1.3-1.96-3.7-4.97-3.7-2.99 0-5.48 2.35-5.48 5.81 0 3.26 2.46 5.81 5.76 5.81 2.66 0 4.2-1.63 4.84-2.57l-1.98-1.32c-.66.96-1.56 1.6-2.86 1.6zm-.18-7.15c1.03 0 1.91.53 2.2 1.28l-5.25 2.17c0-2.44 1.73-3.45 3.05-3.45z\"\n});\n\nfunction SvgGoogleLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 74,\n    height: 24,\n    viewBox: \"0 0 74 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGoogleLogo);\nexport default __webpack_public_path__ + \"static/media/google-logo.a43fa784.svg\";\nexport { ForwardRef as ReactComponent };","import {\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    FormControlLabel,\r\n    Grid,\r\n    LinearProgress,\r\n    Link,\r\n    TextField as MuiTextField,\r\n    Typography,\r\n} from '@mui/material';\r\nimport { useGlobalState } from 'constants/store';\r\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { useEffect, useState } from 'react';\r\nimport { isNil } from 'lodash';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { routes } from 'constants/routes';\r\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport { styled } from '@mui/system';\r\nimport { ReactComponent as Logo } from 'static/images/google-logo.svg';\r\nimport clsx from 'clsx';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n\r\ntype FormValues = {\r\n    login: string;\r\n    password: string;\r\n    passwordVisible: boolean;\r\n};\r\n\r\nfunction ErrorLabel({ message }: { message: string }) {\r\n    return (\r\n        <>\r\n            <ErrorIcon className=\"mr-2 w-4 h-4\" />\r\n            <span>{message}</span>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Section = styled('div')(({ theme }) => ({\r\n    borderRadius: '8px',\r\n    border: `1px solid ${theme.palette.neutral.main}`,\r\n    padding: '48px 40px 36px',\r\n    width: '450px',\r\n}));\r\n\r\nconst TextField = styled(MuiTextField)`\r\n    &&&& .MuiFormHelperText-contained {\r\n        margin-left: 0px;\r\n    }\r\n`;\r\n\r\nexport default function Login() {\r\n    const {\r\n        handleSubmit,\r\n        control,\r\n        trigger,\r\n        watch,\r\n        formState: { errors },\r\n    } = useForm<FormValues>({\r\n        defaultValues: { login: '', password: '', passwordVisible: false },\r\n        reValidateMode: 'onSubmit',\r\n    });\r\n    const [user] = useGlobalState('user');\r\n    const [loading, setLoading] = useState(false);\r\n    const [step, setStep] = useState<1 | 2>(1);\r\n    const navigate = useNavigate();\r\n\r\n    const onSubmit: SubmitHandler<FormValues> = async ({ login, password }) => {\r\n        setLoading(true);\r\n        try {\r\n            await signInWithEmailAndPassword(getAuth(), login, password);\r\n        } catch (e) {\r\n            alert((e as any) || '');\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isNil(user)) {\r\n            navigate(routes.HOME.path);\r\n        }\r\n    }, [user]);\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"flex justify-center items-center h-screen\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div>\r\n                    {loading && <LinearProgress />}\r\n                    <Section>\r\n                        <div>\r\n                            <Logo className=\"w-full\" />\r\n                            <Typography\r\n                                variant=\"h1\"\r\n                                className=\"text-2xl text-center pt-4 font-normal\"\r\n                            >\r\n                                {step === 2 ? 'Witamy' : 'Zaloguj się'}\r\n                            </Typography>\r\n                            <span className=\"inline-block w-full text-center pt-2\">\r\n                                {step === 2 ? (\r\n                                    <Button\r\n                                        onClick={() => setStep(1)}\r\n                                        sx={{\r\n                                            borderRadius: '16px',\r\n                                            color: 'neutral.dark',\r\n                                            borderColor: 'neutral.main',\r\n                                            '&:hover': {\r\n                                                borderColor: 'neutral.main',\r\n                                                backgroundColor: 'neutral.light',\r\n                                            },\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        startIcon={<AccountCircleIcon />}\r\n                                        endIcon={<KeyboardArrowDownIcon />}\r\n                                    >\r\n                                        {watch('login')}\r\n                                    </Button>\r\n                                ) : (\r\n                                    'Otwórz Gmaila'\r\n                                )}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"pt-10\">\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} className={clsx(step === 2 && 'hidden')}>\r\n                                    <Controller\r\n                                        name=\"login\"\r\n                                        control={control}\r\n                                        rules={{\r\n                                            required: 'Wpisz Adres e-mail lub telefon',\r\n                                        }}\r\n                                        render={({ field }) => (\r\n                                            <TextField\r\n                                                className=\"w-full\"\r\n                                                {...field}\r\n                                                error={!!errors.login}\r\n                                                label=\"Adres e-mail lub telefon\"\r\n                                                variant=\"outlined\"\r\n                                                helperText={\r\n                                                    errors.login?.message && (\r\n                                                        <ErrorLabel\r\n                                                            message={errors.login.message}\r\n                                                        />\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                    <Link\r\n                                        href=\"https://\"\r\n                                        component=\"button\"\r\n                                        variant=\"body2\"\r\n                                        underline=\"none\"\r\n                                        className=\"font-medium\"\r\n                                        onClick={() => {\r\n                                            console.info(\"I'm a button.\");\r\n                                        }}\r\n                                    >\r\n                                        Nie pamiętasz adresu?\r\n                                    </Link>\r\n                                </Grid>\r\n                                {step === 2 && (\r\n                                    <Grid item xs={12}>\r\n                                        <Controller\r\n                                            name=\"password\"\r\n                                            control={control}\r\n                                            rules={{\r\n                                                required: 'Hasło',\r\n                                            }}\r\n                                            render={({ field }) => (\r\n                                                <TextField\r\n                                                    type={\r\n                                                        watch('passwordVisible')\r\n                                                            ? 'text'\r\n                                                            : 'password'\r\n                                                    }\r\n                                                    className=\"w-full\"\r\n                                                    {...field}\r\n                                                    error={!!errors.password}\r\n                                                    label=\"Wpisz hasło\"\r\n                                                    variant=\"outlined\"\r\n                                                    helperText={\r\n                                                        errors.password?.message && (\r\n                                                            <ErrorLabel\r\n                                                                message={errors.password.message}\r\n                                                            />\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Grid>\r\n                                )}\r\n\r\n                                {step === 2 && (\r\n                                    <Grid item xs={12} className=\"pt-0 pb-7\">\r\n                                        <Controller\r\n                                            name=\"passwordVisible\"\r\n                                            control={control}\r\n                                            render={({ field }) => (\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox {...field} />}\r\n                                                    label=\"Pokaż hasło\"\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Grid>\r\n                                )}\r\n                                {step === 1 && (\r\n                                    <Grid item xs={12} className=\"py-6\">\r\n                                        <span className=\"text-sm\">\r\n                                            To nie Twój komputer? Aby zalogować się prywatnie, użyj\r\n                                            trybu gościa.\r\n                                            <Link\r\n                                                href=\"https://\"\r\n                                                underline=\"none\"\r\n                                                className=\"font-medium\"\r\n                                            >\r\n                                                Dowiedz się więcej\r\n                                            </Link>\r\n                                        </span>\r\n                                    </Grid>\r\n                                )}\r\n                                <Grid item container xs={12} className=\"justify-between -ml-2\">\r\n                                    <Button type=\"submit\" variant=\"text\" className=\"normal-case\">\r\n                                        {step === 1 ? 'Utwórz konto' : 'Nie pamiętasz hasła'}\r\n                                    </Button>\r\n                                    <Button\r\n                                        onClick={async () => {\r\n                                            if (step === 1) {\r\n                                                const res = await trigger('login');\r\n\r\n                                                if (res) {\r\n                                                    setStep(2);\r\n                                                }\r\n                                            }\r\n\r\n                                            if (step === 2) {\r\n                                                handleSubmit(onSubmit)();\r\n                                            }\r\n                                        }}\r\n                                        variant=\"contained\"\r\n                                        className=\"normal-case\"\r\n                                    >\r\n                                        Dalej\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </Section>\r\n                </div>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n","import Home from 'pages/Home';\r\nimport Login from 'pages/Login';\r\n\r\nconst prefix = '/gmail-clone';\r\n\r\nexport const routes = {\r\n    HOME: {\r\n        path: `${prefix}/`,\r\n        component: <Home />,\r\n        name: 'Home',\r\n        isPrivate: true,\r\n    },\r\n    LOGIN: {\r\n        path: `${prefix}/login`,\r\n        component: <Login />,\r\n        name: 'Login',\r\n        isPrivate: false,\r\n    },\r\n} as const;\r\n","import { CircularProgress } from '@mui/material';\r\nimport { routes } from 'constants/routes';\r\nimport { useGlobalState } from 'constants/store';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\n\r\nfunction PrivateRoute({ children }: { children: JSX.Element }) {\r\n    const location = useLocation();\r\n    const [user] = useGlobalState('user');\r\n\r\n    if (user === undefined) {\r\n        return <CircularProgress />;\r\n    }\r\n\r\n    if (user === null) {\r\n        return <Navigate to={routes.LOGIN.path} state={{ from: location }} />;\r\n    }\r\n\r\n    return children;\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import { Button } from '@mui/material';\r\nimport { routes } from 'constants/routes';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function NoMatch() {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Button onClick={() => navigate(routes.HOME.path)}>Returen</Button>\r\n        </div>\r\n    );\r\n}\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\ndeclare module '@mui/material/styles' {\r\n    interface Palette {\r\n        neutral: Palette['primary'];\r\n    }\r\n    interface PaletteOptions {\r\n        neutral: PaletteOptions['primary'];\r\n    }\r\n}\r\n\r\nexport default createTheme({\r\n    palette: {\r\n        neutral: {\r\n            light: '#f7f8f8',\r\n            main: '#dadce0',\r\n            dark: '#3c4043',\r\n        },\r\n    },\r\n});\r\n","import { firebaseConfig } from 'api/config';\nimport { PrivateRoute } from 'components/PrivateRoute';\nimport { routes } from 'constants/routes';\nimport { useGlobalState } from 'constants/store';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { map } from 'lodash';\nimport NoMatch from 'pages/NoMatch';\nimport { useEffect } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport 'layout/style/root.css';\nimport { CssBaseline } from '@mui/material';\nimport theme from 'styles/theme';\nimport { ThemeProvider } from '@mui/material/styles';\n\ninitializeApp(firebaseConfig);\n\nfunction Root() {\n    const authentication = getAuth();\n    const [, setUser] = useGlobalState('user');\n\n    useEffect(() => {\n        onAuthStateChanged(authentication, (authUser) => {\n            setUser(authUser);\n        });\n    }, [onAuthStateChanged, authentication]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <BrowserRouter>\n                <Routes>\n                    {map(routes, ({ path, component, isPrivate }) =>\n                        isPrivate ? (\n                            <Route\n                                key={path}\n                                path={path}\n                                element={<PrivateRoute>{component}</PrivateRoute>}\n                            />\n                        ) : (\n                            <Route key={path} path={path} element={component} />\n                        )\n                    )}\n\n                    <Route path=\"*\" element={<NoMatch />} />\n                </Routes>\n            </BrowserRouter>\n        </ThemeProvider>\n    );\n}\n\nexport default Root;\n","export const firebaseConfig = {\r\n    apiKey: 'AIzaSyC7k5hkrfiKIWVfR_bjx4s3XEf4Iyf3ENM',\r\n    authDomain: 'test-p-64541.firebaseapp.com',\r\n    projectId: 'test-p-64541',\r\n    storageBucket: 'test-p-64541.appspot.com',\r\n    messagingSenderId: '463564250016',\r\n    appId: '1:463564250016:web:36040b511e5edf3e62a2c5',\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'layout/Root';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Root />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}